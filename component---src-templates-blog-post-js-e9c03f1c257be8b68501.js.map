{"version":3,"file":"component---src-templates-blog-post-js-e9c03f1c257be8b68501.js","mappings":"+NAsDaA,EAAO,SAAHC,GAA4C,IAAdC,EAAID,EAA5BE,KAAQC,eAC3B,OAAOC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAOL,EAAKM,YAAYD,MAAOE,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,SACjG,EAEA,UAnDyB,SAAHC,GAA4E,IAADC,EAAAC,EAAAF,EAArER,KAAQW,EAAQD,EAARC,SAAUC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAAsBd,EAAIW,EAApBT,eAAwBa,EAAQN,EAARM,SACxEC,GAA6B,QAAjBN,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBL,QAAK,QAG1C,OAFAa,QAAQC,IAAInB,GAGRG,EAAAA,cAACiB,EAAAA,EAAM,CAACL,SAAUA,EAAUV,MAAOW,GAC/Bb,EAAAA,cAAA,WAASkB,UAAU,YAAYC,WAAS,EAACC,SAAS,6BAC9CpB,EAAAA,cAAA,cACIA,EAAAA,cAAA,MAAIqB,SAAS,YAAYxB,EAAKM,YAAYD,OAC1CF,EAAAA,cAAA,SAAIH,EAAKM,YAAYmB,OAEzBtB,EAAAA,cAAA,WAASuB,wBAAyB,CAAEC,OAAQ3B,EAAK4B,MAAQJ,SAAS,gBAClErB,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACIA,EAAAA,cAAC0B,EAAAA,EAAG,QAGZ1B,EAAAA,cAAA,OAAKkB,UAAU,iBACXlB,EAAAA,cAAA,MACI2B,MAAO,CACHC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGbhC,EAAAA,cAAA,UACKS,GACGT,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAIzB,EAAS0B,OAAOC,KAAMC,IAAI,QAAO,KACpC5B,EAASN,YAAYD,QAIpCF,EAAAA,cAAA,UACKU,GACGV,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAIxB,EAAKyB,OAAOC,KAAMC,IAAI,QAC3B3B,EAAKP,YAAYD,MAAM,SAQxD,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nconst BlogPostTemplate = ({ data: { previous, next, site, markdownRemark: post }, location }) => {\n    const siteTitle = site.siteMetadata?.title || `Title`;\n    console.log(post)\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <article className='blog-post' itemScope itemType='http://schema.org/Article'>\n                <header>\n                    <h1 itemProp='headline'>{post.frontmatter.title}</h1>\n                    <p>{post.frontmatter.date}</p>\n                </header>\n                <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp='articleBody' />\n                <hr />\n                <footer>\n                    <Bio />\n                </footer>\n            </article>\n            <nav className='blog-post-nav'>\n                <ul\n                    style={{\n                        display: `flex`,\n                        flexWrap: `wrap`,\n                        justifyContent: `space-between`,\n                        listStyle: `none`,\n                        padding: 0\n                    }}\n                >\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel='prev'>\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel='next'>\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Layout>\n    );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n    return <Seo title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />;\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n            }\n        }\n        previous: markdownRemark(id: { eq: $previousPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n        next: markdownRemark(id: { eq: $nextPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n    }\n`;\n"],"names":["Head","_ref2","post","data","markdownRemark","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","_ref$data","previous","next","site","location","siteTitle","siteMetadata","console","log","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}